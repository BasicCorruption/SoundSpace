// Generated by Haxe 4.0.5
#ifndef INCLUDED_io_github_keystone_games_soundspace_SoundSpace
#define INCLUDED_io_github_keystone_games_soundspace_SoundSpace

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
HX_DECLARE_CLASS4(io,github,keystone_games,soundspace,SoundSpace)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)

namespace io{
namespace github{
namespace keystone_games{
namespace soundspace{


class HXCPP_CLASS_ATTRIBUTES SoundSpace_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef SoundSpace_obj OBJ_;
		SoundSpace_obj();

	public:
		enum { _hx_ClassId = 0x4bbee343 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="io.github.keystone_games.soundspace.SoundSpace")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"io.github.keystone_games.soundspace.SoundSpace"); }
		static hx::ObjectPtr< SoundSpace_obj > __new();
		static hx::ObjectPtr< SoundSpace_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~SoundSpace_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SoundSpace",97,a5,5c,e1); }

		static void init();
		static ::Dynamic init_dyn();

		static void postInit();
		static ::Dynamic postInit_dyn();

		static void exit(int exitCode);
		static ::Dynamic exit_dyn();

};

} // end namespace io
} // end namespace github
} // end namespace keystone_games
} // end namespace soundspace

#endif /* INCLUDED_io_github_keystone_games_soundspace_SoundSpace */ 
