// Generated by Haxe 4.0.5
#ifndef INCLUDED_io_github_keystone_games_soundspace_Reference
#define INCLUDED_io_github_keystone_games_soundspace_Reference

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS4(io,github,keystone_games,soundspace,Reference)

namespace io{
namespace github{
namespace keystone_games{
namespace soundspace{


class HXCPP_CLASS_ATTRIBUTES Reference_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Reference_obj OBJ_;
		Reference_obj();

	public:
		enum { _hx_ClassId = 0x3222c463 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="io.github.keystone_games.soundspace.Reference")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"io.github.keystone_games.soundspace.Reference"); }

		inline static hx::ObjectPtr< Reference_obj > __new() {
			hx::ObjectPtr< Reference_obj > __this = new Reference_obj();
			__this->__construct();
			return __this;
		}

		inline static hx::ObjectPtr< Reference_obj > __alloc(hx::Ctx *_hx_ctx) {
			Reference_obj *__this = (Reference_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Reference_obj), false, "io.github.keystone_games.soundspace.Reference"));
			*(void **)__this = Reference_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Reference_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Reference",ab,e7,97,fc); }

		static void __boot();
		static ::String APP_NAME;
		static ::String APP_ID;
		static ::String VERSION;
		static Float VOLUME_MULTIPLIER;
		static ::String ASSET_GROUP;
		static  ::Dynamic DEBUG;
		static ::String LAST_MAP;
};

} // end namespace io
} // end namespace github
} // end namespace keystone_games
} // end namespace soundspace

#endif /* INCLUDED_io_github_keystone_games_soundspace_Reference */ 
