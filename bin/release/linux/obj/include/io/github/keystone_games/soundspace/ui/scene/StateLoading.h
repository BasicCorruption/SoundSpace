// Generated by Haxe 4.0.5
#ifndef INCLUDED_io_github_keystone_games_soundspace_ui_scene_StateLoading
#define INCLUDED_io_github_keystone_games_soundspace_ui_scene_StateLoading

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS1(flixel,FlxState)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS6(io,github,keystone_games,soundspace,ui,scene,StateLoading)

namespace io{
namespace github{
namespace keystone_games{
namespace soundspace{
namespace ui{
namespace scene{


class HXCPP_CLASS_ATTRIBUTES StateLoading_obj : public  ::flixel::FlxState_obj
{
	public:
		typedef  ::flixel::FlxState_obj super;
		typedef StateLoading_obj OBJ_;
		StateLoading_obj();

	public:
		enum { _hx_ClassId = 0x5552eebb };

		void __construct( ::Dynamic MaxSize);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="io.github.keystone_games.soundspace.ui.scene.StateLoading")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"io.github.keystone_games.soundspace.ui.scene.StateLoading"); }
		static hx::ObjectPtr< StateLoading_obj > __new( ::Dynamic MaxSize);
		static hx::ObjectPtr< StateLoading_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic MaxSize);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~StateLoading_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("StateLoading",8b,20,9f,8e); }

		static void __boot();
		static  ::flixel::FlxSprite bar;
		static bool bgLeft;
		static  ::flixel::text::FlxText titleText;
		static int lpc;
		static Float lpcTimer;
		void create();

		void update(Float dt);

};

} // end namespace io
} // end namespace github
} // end namespace keystone_games
} // end namespace soundspace
} // end namespace ui
} // end namespace scene

#endif /* INCLUDED_io_github_keystone_games_soundspace_ui_scene_StateLoading */ 
